/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const ChooseLazyImport = createFileRoute('/choose')()
const IndexLazyImport = createFileRoute('/')()
const AuthRegisterLazyImport = createFileRoute('/auth/register')()
const AuthOtpLazyImport = createFileRoute('/auth/otp')()
const AuthLoginLazyImport = createFileRoute('/auth/login')()
const AuthForgetPassReqLazyImport = createFileRoute('/auth/forget-pass-req')()
const AuthForgetPassLazyImport = createFileRoute('/auth/forget-pass')()
const PaymentLazyImport = createFileRoute('/payment')()
const AboutLazyImport = createFileRoute('/about')()

// Create/Update Routes

const PaymentLazyRoute = PaymentLazyImport.update({
  id: '/payment',
  path: '/payment',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/payment.lazy').then((d) => d.Route))

const ChooseLazyRoute = ChooseLazyImport.update({
  id: '/choose',
  path: '/choose',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/choose.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const AuthRegisterLazyRoute = AuthRegisterLazyImport.update({
  id: '/auth/register',
  path: '/auth/register',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/auth/register.lazy').then((d) => d.Route))

const AuthOtpLazyRoute = AuthOtpLazyImport.update({
  id: '/auth/otp',
  path: '/auth/otp',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/auth/otp.lazy').then((d) => d.Route))

const AuthLoginLazyRoute = AuthLoginLazyImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/auth/login.lazy').then((d) => d.Route))

const AuthForgetPassReqLazyRoute = AuthForgetPassReqLazyImport.update({
  id: '/auth/forget-pass-req',
  path: '/auth/forget-pass-req',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/auth/forget-pass-req.lazy').then((d) => d.Route),
)

const AuthForgetPassLazyRoute = AuthForgetPassLazyImport.update({
  id: '/auth/forget-pass',
  path: '/auth/forget-pass',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/auth/forget-pass.lazy').then((d) => d.Route),
)
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/choose': {
      id: '/choose'
      path: '/choose'
      fullPath: '/choose'
      preLoaderRoute: typeof ChooseLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth/forget-pass': {
      id: '/auth/forget-pass'
      path: '/auth/forget-pass'
      fullPath: '/auth/forget-pass'
      preLoaderRoute: typeof AuthForgetPassLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth/forget-pass-req': {
      id: '/auth/forget-pass-req'
      path: '/auth/forget-pass-req'
      fullPath: '/auth/forget-pass-req'
      preLoaderRoute: typeof AuthForgetPassReqLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth/otp': {
      id: '/auth/otp'
      path: '/auth/otp'
      fullPath: '/auth/otp'
      preLoaderRoute: typeof AuthOtpLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterLazyImport
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/payment': {
      id: '/payment'
      path: '/payment'
      fullPath: '/payment'
      preLoaderRoute: typeof PaymentLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/choose': typeof ChooseLazyRoute
  '/auth/forget-pass': typeof AuthForgetPassLazyRoute
  '/auth/forget-pass-req': typeof AuthForgetPassReqLazyRoute
  '/auth/login': typeof AuthLoginLazyRoute
  '/auth/otp': typeof AuthOtpLazyRoute
  '/auth/register': typeof AuthRegisterLazyRoute
  '/about': typeof AboutLazyRoute
  '/payment': typeof PaymentLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/choose': typeof ChooseLazyRoute
  '/auth/forget-pass': typeof AuthForgetPassLazyRoute
  '/auth/forget-pass-req': typeof AuthForgetPassReqLazyRoute
  '/auth/login': typeof AuthLoginLazyRoute
  '/auth/otp': typeof AuthOtpLazyRoute
  '/auth/register': typeof AuthRegisterLazyRoute
  '/about': typeof AboutLazyRoute
  '/payment': typeof PaymentLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/choose': typeof ChooseLazyRoute
  '/auth/forget-pass': typeof AuthForgetPassLazyRoute
  '/auth/forget-pass-req': typeof AuthForgetPassReqLazyRoute
  '/auth/login': typeof AuthLoginLazyRoute
  '/auth/otp': typeof AuthOtpLazyRoute
  '/auth/register': typeof AuthRegisterLazyRoute
  '/about': typeof AboutLazyRoute
  '/payment': typeof PaymentLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/choose'
    | '/auth/forget-pass'
    | '/auth/forget-pass-req'
    | '/auth/login'
    | '/auth/otp'
    | '/auth/register'
  fullPaths: '/about' | '/payment'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/choose'
    | '/auth/forget-pass'
    | '/auth/forget-pass-req'
    | '/auth/login'
    | '/auth/otp'
    | '/auth/register'
  id:
    | '__root__'
    | '/'
    | '/choose'
    | '/auth/forget-pass'
    | '/auth/forget-pass-req'
    | '/auth/login'
    | '/auth/otp'
    | '/auth/register'
  to: '/about' | '/payment'
  id: '__root__' | '/about' | '/payment'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  ChooseLazyRoute: typeof ChooseLazyRoute
  AuthForgetPassLazyRoute: typeof AuthForgetPassLazyRoute
  AuthForgetPassReqLazyRoute: typeof AuthForgetPassReqLazyRoute
  AuthLoginLazyRoute: typeof AuthLoginLazyRoute
  AuthOtpLazyRoute: typeof AuthOtpLazyRoute
  AuthRegisterLazyRoute: typeof AuthRegisterLazyRoute
  AboutLazyRoute: typeof AboutLazyRoute
  PaymentLazyRoute: typeof PaymentLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  ChooseLazyRoute: ChooseLazyRoute,
  AuthForgetPassLazyRoute: AuthForgetPassLazyRoute,
  AuthForgetPassReqLazyRoute: AuthForgetPassReqLazyRoute,
  AuthLoginLazyRoute: AuthLoginLazyRoute,
  AuthOtpLazyRoute: AuthOtpLazyRoute,
  AuthRegisterLazyRoute: AuthRegisterLazyRoute,
  AboutLazyRoute: AboutLazyRoute,
  PaymentLazyRoute: PaymentLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.jsx",
      "children": [
        "/",
        "/choose",
        "/auth/forget-pass",
        "/auth/forget-pass-req",
        "/auth/login",
        "/auth/otp",
        "/auth/register"
        "/about",
        "/payment"
      ]
    },
    "/": {
      "filePath": "index.lazy.jsx"
    },
    "/choose": {
      "filePath": "choose.lazy.jsx"
    },
    "/auth/forget-pass": {
      "filePath": "auth/forget-pass.lazy.jsx"
    },
    "/auth/forget-pass-req": {
      "filePath": "auth/forget-pass-req.lazy.jsx"
    },
    "/auth/login": {
      "filePath": "auth/login.lazy.jsx"
    },
    "/auth/otp": {
      "filePath": "auth/otp.lazy.jsx"
    },
    "/auth/register": {
      "filePath": "auth/register.lazy.jsx"
    "/about": {
      "filePath": "about.lazy.jsx"
    },
    "/payment": {
      "filePath": "payment.lazy.jsx"
    }
  }
}
ROUTE_MANIFEST_END */
